{"version":3,"sources":["components/MenuListItems/MenuListItems.jsx","components/Charts/LineChartComponent.jsx","components/Charts/PieChartComponent.jsx","components/NotesList/NotesList.jsx","services/date.service.js","services/sales.service.js","components/ExceptionComponents/ExceptionComponents.jsx","constants/dashboard.constants.js","context/dashboard.context.js","actions/home.actions.js","services/home.service.js","pages/HomePage.jsx","pages/WorkflowPage.jsx","actions/statistics.actions.js","services/statistics.service.js","pages/StatisticsPage.jsx","pages/CalendarPage.jsx","pages/UsersPage.jsx","pages/SettingsPage.jsx","routes/DashboardRoutes.jsx","components/Dashboard/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","link","textDecoration","color","activeItem","backgroundColor","borderLeft","selected","MenuListItems","classes","history","useHistory","useState","location","pathname","currentPath","setCurrentPath","listen","List","className","to","MenuItem","button","clsx","ListItemIcon","ListItemText","primary","Divider","chartHeader","display","flexDirection","justifyContent","textHeader","marginLeft","borderRadius","marginRight","textTransform","LineChartComponent","props","useTheme","Typography","component","variant","gutterBottom","Button","endIcon","align","ResponsiveContainer","LineChart","data","width","height","margin","top","right","bottom","left","YAxis","stroke","palette","text","secondary","Label","angle","position","style","textAnchor","fill","Line","type","dataKey","main","dot","Tooltip","defaultProps","PieChartComponent","chart","colors","labels","dataLabels","enabled","plotOptions","pie","donut","size","background","show","total","showAlways","label","formatter","w","globals","seriesTotals","reduce","a","b","responsive","breakpoint","options","legend","id","series","root","padding","paper","listHeader","noteHeader","fontWeight","unread","inline","TYPE_MESSAGES","NotesList","isMessage","isDisplayTimeIcon","isDelay","isHideContextMenu","isHideButtons","isDateNextToName","isActivity","notifactions","setNotifactions","useEffect","setNoteNotifactions","toLowerCase","Error","aria-labelledby","ListItem","noteBadges","IconButton","Badge","badgeContent","length","map","item","index","user","title","content","author","date","action","task","username","name","userImage","image","dateText","moment","fromNow","getTimeTextByDate","isTimePassed","now","isAfter","getIsTimePassed","alignItems","ListItemAvatar","Avatar","alt","src","fontSize","mapSalesData","push","value","error","marginTop","spacing","LoadingComponent","CircularProgress","ErrorComponent","message","Alert","severity","elevation","AlertTitle","LOAD_HOME_DATA","LOAD_STATISTICS_DATA","SET_HOME_DATA","SET_STATISTICS_DATA","DashboardContext","createContext","initialState","homeData","isLoading","statisticsData","dashboardReducer","state","useDashboardContext","context","useContext","DashboardContextProvider","useReducer","dashboardState","dispatch","Provider","setHomeDataAction","actionData","fetchHomeData","fetch","process","headers","res","json","console","log","overflow","fixedHeight","borderPaper","border","HomePage","fixedHeightPaper","didMount","isEmpty","sales","tasks","messages","activity","Grid","container","xs","md","lg","Paper","report","WorkflowPage","setStatisticsDataAction","fetchStatisticsData","StatisticsPage","CalendarPage","UsersPage","SettingsPage","DashboardRoutes","path","exact","toolbar","paddingRight","menuHeader","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","avatar","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","flexGrow","paddingTop","paddingBottom","Dashboard","open","toggleOpen","CssBaseline","AppBar","Toolbar","navigationButtons","edge","aria-label","onClick","actionsButtons","startIcon","Drawer","Container","maxWidth","createMuiTheme","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ceb515f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport List from '@material-ui/core/List';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport TrendingUpOutlinedIcon from '@material-ui/icons/TrendingUpOutlined';\r\nimport ViewAgendaOutlinedIcon from '@material-ui/icons/ViewAgendaOutlined';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport DateRangeOutlinedIcon from '@material-ui/icons/DateRangeOutlined';\r\nimport clsx from 'clsx';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './MenuListItems.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: \"white\",\r\n    },\r\n    activeItem: {\r\n        '&:hover': {\r\n            backgroundColor: \"#122143\",\r\n            borderLeft: \"6px solid #5584ff !important\",\r\n        },\r\n    },\r\n    selected: {\r\n        // backgroundColor: \"#122143\",\r\n        borderLeft: \"6px solid #5584ff !important\",\r\n    }\r\n}));\r\n\r\n\r\nconst MenuListItems = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [currentPath, setCurrentPath] = useState(history.location.pathname)    \r\n    history.listen((location) => setCurrentPath(location.pathname));\r\n\r\n    return (\r\n        <List>\r\n            <Link className={classes.link} to=\"/\" >\r\n                <MenuItem button className={clsx(classes.activeItem, currentPath === '/' ? classes.selected : null)}>\r\n                    <ListItemIcon>\r\n                        <HomeOutlinedIcon color=\"primary\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Home\" />\r\n                </MenuItem>\r\n            </Link>\r\n            <Divider />\r\n\r\n            <Link className={classes.link} to=\"/workflow\">\r\n                <MenuItem button className={clsx(classes.activeItem, currentPath === '/workflow' ? classes.selected : null)}>\r\n                    <ListItemIcon>\r\n                        <ViewAgendaOutlinedIcon color=\"primary\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Workflow\" />\r\n                </MenuItem>\r\n            </Link>\r\n            <Divider />\r\n\r\n            <Link className={classes.link} to=\"/statistics\">\r\n                <MenuItem button className={clsx(classes.activeItem, currentPath === '/statistics' ? classes.selected : null)}>\r\n                    <ListItemIcon>\r\n                        <TrendingUpOutlinedIcon color=\"primary\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Statistics\" />\r\n                </MenuItem>\r\n            </Link>\r\n            <Divider />\r\n\r\n            <Link className={classes.link} to=\"/calendar\">\r\n                <MenuItem button className={clsx(classes.activeItem, currentPath === '/calendar' ? classes.selected : null)}>\r\n                    <ListItemIcon>\r\n                        <DateRangeOutlinedIcon color=\"primary\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Calendar\" />\r\n                </MenuItem>\r\n            </Link>\r\n            <Divider />\r\n\r\n            <Link className={classes.link} to=\"/users\">\r\n                <MenuItem button className={clsx(classes.activeItem, currentPath === '/users' ? classes.selected : null)}>\r\n                    <ListItemIcon>\r\n                        <PersonOutlineOutlinedIcon color=\"primary\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Users\" />\r\n                </MenuItem>\r\n            </Link>\r\n            <Divider />\r\n\r\n            <Link className={classes.link} to=\"/settings\">\r\n                <MenuItem button className={clsx(classes.activeItem, currentPath === '/settings' ? classes.selected : null)}>\r\n                    <ListItemIcon>\r\n                        <SettingsOutlinedIcon color=\"primary\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Settings\" />\r\n                </MenuItem>\r\n            </Link>\r\n            <Divider />\r\n        </List >\r\n    );\r\n}\r\n\r\nexport default MenuListItems;","import React, { Fragment } from 'react';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    YAxis,\r\n    Label,\r\n    ResponsiveContainer,\r\n    Tooltip\r\n} from 'recharts';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    chartHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    textHeader: {\r\n        marginLeft: 25,\r\n    },\r\n    button: {\r\n        borderRadius: 25,\r\n        marginRight: 10,\r\n        textTransform: 'unset !important',\r\n        backgroundColor: 'white',\r\n    },\r\n}));\r\n\r\n\r\nconst LineChartComponent = (props) => {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.chartHeader}>\r\n                <Typography\r\n                    className={classes.textHeader}\r\n                    component=\"h2\"\r\n                    variant=\"h6\"\r\n                    gutterBottom\r\n                >\r\n                    Report\r\n                </Typography>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    endIcon={<ArrowDropDownIcon />}\r\n                    align=\"right\"\r\n                >\r\n                    Period: Last Year\r\n            </Button>\r\n            </div>\r\n            <ResponsiveContainer>\r\n                <LineChart\r\n                    data={props.data}\r\n                    width={300} height={300}\r\n                    margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\r\n                >\r\n                    <YAxis stroke={theme.palette.text.secondary}>\r\n                        <Label\r\n                            angle={270}\r\n                            position=\"left\"\r\n                            style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n                        >\r\n                        </Label>\r\n                    </YAxis>\r\n                    <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n                    <Tooltip />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\nLineChartComponent.defaultProps = {\r\n    data: [],\r\n}\r\n\r\n\r\nexport default LineChartComponent;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Chart from \"react-apexcharts\";\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    chartHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    textHeader: {\r\n        marginLeft: 25,\r\n\r\n    },\r\n    button: {\r\n        borderRadius: 25,\r\n        marginRight: 10,\r\n        textTransform: 'unset !important',\r\n        backgroundColor: 'white',\r\n    },\r\n}));\r\n\r\nconst getOptions = (labels) => ({\r\n    chart: { type: 'donut' },\r\n    colors: ['#25396e', '#5584ff', '#4b74e0', '#4164c2', '#3755a4'],\r\n    labels,\r\n    dataLabels: { enabled: false },\r\n    stroke: { width: 0 },\r\n    plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                size: '50%',\r\n                background: 'transparent',\r\n                labels: {\r\n                    show: true,\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: true,\r\n                        label: 'Sales',\r\n                        formatter: (w) => {\r\n                            return w.globals.seriesTotals.reduce((a, b) => {\r\n                                return a + b\r\n                            }, 0)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    },\r\n    responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n            legend: {\r\n                position: 'bottom'\r\n            }\r\n        }\r\n    }]\r\n})\r\n\r\n\r\nconst PieChartComponent = (props) => {\r\n    const classes = useStyles();\r\n    const [options] = useState(getOptions(props.labels));\r\n    return (\r\n        <div id=\"chart\">\r\n            <div className={classes.chartHeader}>\r\n                <Typography\r\n                    className={classes.textHeader}\r\n                    component=\"h2\"\r\n                    variant=\"h6\"\r\n                    gutterBottom\r\n                >\r\n                    Your Sales\r\n                </Typography>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    endIcon={<ArrowDropDownIcon />}\r\n                    align=\"right\"\r\n                >\r\n                    Period: Last Year\r\n                </Button>\r\n            </div>\r\n            <Chart\r\n                options={options}\r\n                series={props.series}\r\n                type=\"donut\"\r\n                width={325}\r\n                height={180}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nPieChartComponent.defaultProps = {\r\n    series: [],\r\n    labels: [],\r\n}\r\n\r\nexport default PieChartComponent;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"./NotesList.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  getTimeTextByDate,\r\n  getIsTimePassed,\r\n} from \"../../services/date.service\";\r\nimport { Badge, IconButton } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  listHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  noteHeader: {\r\n    padding: 0,\r\n    fontWeight: \"bold\",\r\n  },\r\n  unread: {\r\n    backgroundColor: \"#f4f5f8\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nconst TYPE_TASK = \"task\";\r\nconst TYPE_MESSAGES = \"messages\";\r\nconst TYPE_ACTIVITY = \"activity\";\r\n\r\nconst NotesList = (props) => {\r\n  const {\r\n    data,\r\n    isMessage,\r\n    isDisplayTimeIcon,\r\n    isDelay,\r\n    isHideContextMenu,\r\n    isHideButtons,\r\n    isDateNextToName,\r\n    isActivity,\r\n    type,\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  const [notifactions, setNotifactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setNoteNotifactions();\r\n  }, [type]);\r\n\r\n  const setNoteNotifactions = () => {\r\n    switch (type.toLowerCase()) {\r\n      case TYPE_TASK:\r\n        setNotifactions([5, 2]);\r\n        break;\r\n      case TYPE_MESSAGES:\r\n        setNotifactions([2]);\r\n        break;\r\n      case TYPE_ACTIVITY:\r\n        setNotifactions([10]);\r\n        break;\r\n      default:\r\n        throw new Error(\"Unknown Type\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"subheader\"\r\n      className={clsx(classes.root, \"notes-list\")}\r\n    >\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={\r\n            <div className={classes.listHeader}>\r\n              <Typography className={classes.noteHeader} id=\"subheader\">\r\n                {type}\r\n              </Typography>\r\n              <div className={classes.noteBadges}>\r\n                <IconButton color=\"inherit\">\r\n                  <Badge badgeContent={notifactions[0]} color=\"primary\"></Badge>\r\n                </IconButton>\r\n                {notifactions.length > 1 && (\r\n                  <IconButton color=\"inherit\">\r\n                    <Badge\r\n                      badgeContent={notifactions[1]}\r\n                      color=\"secondary\"\r\n                    ></Badge>\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <div className=\"notes\">\r\n        {data.map((item, index) => {\r\n          const { user, title, content, author, date, action, task } = item;\r\n          const username = user?.name ?? \"No user Found\";\r\n          const userImage = user?.image || \"/static/images/avatar/1.jpg\";\r\n          const dateText = getTimeTextByDate(date);\r\n          const isTimePassed = getIsTimePassed(date);\r\n\r\n          return (\r\n            <Fragment key={index}>\r\n              <ListItem\r\n                className={\r\n                  type.toLowerCase() === TYPE_MESSAGES && index < 2\r\n                    ? classes.unread\r\n                    : \"\"\r\n                }\r\n                alignItems=\"flex-start\"\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar alt={username} src={userImage} />\r\n                </ListItemAvatar>\r\n\r\n                <div className=\"note-content\">\r\n                  <ListItemText\r\n                    primary={\r\n                      <span className=\"title-list-item-text\">\r\n                        {isActivity ? (\r\n                          <span>\r\n                            {author}{\" \"}\r\n                            <span\r\n                              style={{\r\n                                color: \"#8492af\",\r\n                                fontSize: 11,\r\n                                fontWeight: \"normal\",\r\n                              }}\r\n                            >\r\n                              {action}\r\n                            </span>{\" \"}\r\n                            {task}\r\n                          </span>\r\n                        ) : isMessage ? (\r\n                          author\r\n                        ) : (\r\n                          <span style={{ fontSize: 15 }}>{title}</span>\r\n                        )}\r\n                        {isDateNextToName && (\r\n                          <span\r\n                            className={`display-date ${\r\n                              isDelay && !isTimePassed ? \"time-delayed\" : \"\"\r\n                            }`}\r\n                            style={{\r\n                              marginLeft: 8,\r\n                              color: \"#96a2ba\",\r\n                              fontSize: 13,\r\n                              fontWeight: \"normal\",\r\n                            }}\r\n                          >\r\n                            {isDisplayTimeIcon && (\r\n                              <AccessTimeIcon className=\"time-icon\" />\r\n                            )}\r\n                            <span>{dateText}</span>\r\n                          </span>\r\n                        )}\r\n                      </span>\r\n                    }\r\n                    secondary={<p className=\"content\">{content}</p>}\r\n                  />\r\n\r\n                  {!isDateNextToName && (\r\n                    <div\r\n                      className={`display-date ${\r\n                        isDelay && !isTimePassed ? \"time-delayed\" : \"\"\r\n                      }`}\r\n                    >\r\n                      {isDisplayTimeIcon && (\r\n                        <AccessTimeIcon className=\"time-icon\" />\r\n                      )}\r\n                      <span>{dateText}</span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {!isHideButtons && (\r\n                    <div className=\"actions-btn\">\r\n                      <ReplyIcon className=\"action-btn\" />\r\n                      <SettingsIcon className=\"action-btn\" />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {!isHideContextMenu && (\r\n                  <MoreVertIcon className=\"context-menu\" />\r\n                )}\r\n              </ListItem>\r\n              {index !== data.length - 1 && <Divider component=\"li\" />}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n    </List>\r\n  );\r\n};\r\n\r\nNotesList.defaultProps = {\r\n  data: [],\r\n  isDelay: false,\r\n  isHideButtons: true,\r\n  isHideContextMenu: false,\r\n  isDateNextToName: false,\r\n  isMessage: false,\r\n  isDisplayTimeIcon: false,\r\n  isActivity: false,\r\n};\r\n\r\nexport default NotesList;\r\n","import moment from 'moment';\r\n\r\nexport const getTimeTextByDate = date => {\r\n    const d = moment(date);\r\n    const fromNow = d.fromNow();\r\n    return fromNow;\r\n}\r\n\r\nexport const getIsTimePassed = date => {\r\n    const now = moment();\r\n    const d = moment(date);\r\n    return d.isAfter(now);\r\n}","export const mapSalesData = (data) => {\r\n    const series = [];\r\n    const labels = [];\r\n    for (const item of data) {\r\n        series.push(item.value);\r\n        labels.push(item.label);\r\n    }\r\n    return { series, labels }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport const LoadingComponent = () => <CircularProgress />\r\n\r\nexport const ErrorComponent = ({ message }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.error}>\r\n      <Alert severity=\"error\" elevation={6} variant=\"filled\">\r\n        <AlertTitle>Error</AlertTitle>\r\n        {message ? <strong>{message}</strong> : <strong>check which error</strong>}\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","export const LOAD_HOME_DATA = \"LOAD_HOME_DATA\";\r\nexport const LOAD_STATISTICS_DATA = \"LOAD_STATISTICS_DATA\";\r\n\r\nexport const SET_HOME_DATA = \"SET_HOME_DATA\";\r\nexport const SET_STATISTICS_DATA = \"SET_STATISTICS_DATA\";\r\n\r\n","// src/count/count-context.js\r\nimport React, { createContext, useContext, useReducer } from 'react';\r\n\r\nimport {\r\n    LOAD_HOME_DATA,\r\n    LOAD_STATISTICS_DATA,\r\n    SET_HOME_DATA,\r\n    SET_STATISTICS_DATA\r\n} from '../constants/dashboard.constants';\r\n\r\nconst DashboardContext = createContext();\r\n\r\nconst initialState = {\r\n    homeData: {\r\n        isLoading: false,\r\n        error: null,\r\n        data: {}\r\n    },\r\n    statisticsData: {\r\n        isLoading: false,\r\n        error: null,\r\n        data: {}\r\n    }\r\n}\r\n\r\n\r\nconst dashboardReducer = (state, action) => {\r\n    const { type, data, error } = action;\r\n    switch (type) {\r\n        case LOAD_HOME_DATA:\r\n            return { ...state, homeData: { ...state.homeData, isLoading: true } };\r\n\r\n        case SET_HOME_DATA:\r\n            return { ...state, homeData: { ...state.homeData, isLoading: false, error, data } };\r\n\r\n        case LOAD_STATISTICS_DATA:\r\n            return { ...state, statisticsData: { ...state.statisticsData, isLoading: true } };\r\n\r\n        case SET_STATISTICS_DATA:\r\n            return { ...state, statisticsData: { ...state.statisticsData, isLoading: false, error, data } };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst useDashboardContext = () => {\r\n    const context = useContext(DashboardContext);\r\n    if (!context) {\r\n        throw new Error(`useDashboardContext must be used within a DashboardContextProvider`);\r\n    }\r\n    return context;\r\n}\r\n\r\nconst DashboardContextProvider = (props) => {\r\n    const [dashboardState, dispatch] = useReducer(dashboardReducer, initialState)\r\n    return <DashboardContext.Provider value={{ dashboardState, dispatch }} {...props} />\r\n}\r\n\r\nexport { DashboardContextProvider, useDashboardContext };   ","import {\r\n    LOAD_HOME_DATA,\r\n    SET_HOME_DATA,\r\n} from '../constants/dashboard.constants';\r\n\r\nexport const loadHomeDataAction = () => ({ type: LOAD_HOME_DATA });\r\nexport const setHomeDataAction = (actionData) => ({ type: SET_HOME_DATA, ...actionData });","export const fetchHomeData = async () => {\r\n    try {\r\n        const res = await fetch(process.env.PUBLIC_URL + \"/data/home.json\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n        const json = await res.json();\r\n        console.log({ json })\r\n        return { data: json, error: null };\r\n    } catch (error) {\r\n        return { data: null, error };\r\n    }\r\n}","import React, { Fragment, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LineChartComponent from \"../components/Charts/LineChartComponent\";\r\nimport PieChartComponent from \"../components/Charts/PieChartComponent\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport NotesList from \"../components/NotesList/NotesList\";\r\nimport { mapSalesData } from \"../services/sales.service\";\r\nimport { isEmpty } from \"lodash\";\r\nimport {\r\n  LoadingComponent,\r\n  ErrorComponent,\r\n} from \"../components/ExceptionComponents/ExceptionComponents\";\r\nimport { useDashboardContext } from \"../context/dashboard.context\";\r\nimport { loadHomeDataAction, setHomeDataAction } from \"../actions/home.actions\";\r\nimport { fetchHomeData } from \"../services/home.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  borderPaper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid #e8ebf0\",\r\n  },\r\n}));\r\n\r\nconst HomePage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  \r\n  const { dashboardState, dispatch } = useDashboardContext();\r\n  const { data, error, isLoading } = dashboardState.homeData;\r\n\r\n  const didMount = async () => {\r\n    await dispatch(loadHomeDataAction());\r\n    const actionData = await fetchHomeData();\r\n    await dispatch(setHomeDataAction(actionData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    didMount();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <LoadingComponent />;\r\n  }\r\n\r\n  if ((error || isEmpty(data)) && !isLoading) {\r\n    return (\r\n      <ErrorComponent message=\"Had a network error, please try again later\" />\r\n    );\r\n  }\r\n\r\n  const { sales, tasks, messages, activity } = data;\r\n  const { series, labels } = mapSalesData(sales);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={5}>\r\n        <Grid item xs={12} md={5} lg={5}>\r\n          {/* PieChart */}\r\n          <Paper className={fixedHeightPaper}>\r\n            <PieChartComponent series={series} labels={labels} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={7} lg={7}>\r\n          <Paper className={fixedHeightPaper}>\r\n            {/* LineChart */}\r\n            <LineChartComponent data={data.report} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Notes Lists */}\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={4} lg={4}>\r\n          <div className=\"note-wrapper\">\r\n            <NotesList\r\n              type=\"Task\"\r\n              data={tasks}\r\n              isDelay\r\n              isHideButtons\r\n              isHideContextMenu={false}\r\n              isDateNextToName={false}\r\n              isMessage={false}\r\n              isDisplayTimeIcon\r\n              isActivity={false}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} lg={4}>\r\n          <div className=\"note-wrapper\">\r\n            <NotesList\r\n              type=\"Messages\"\r\n              data={messages}\r\n              isDelay={false}\r\n              isHideButtons={false}\r\n              isHideContextMenu\r\n              isDateNextToName\r\n              isMessage\r\n              isDisplayTimeIcon={false}\r\n              isActivity={false}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} lg={4}>\r\n          <div className=\"note-wrapper\">\r\n            <NotesList\r\n              type=\"Activity\"\r\n              data={activity}\r\n              isDelay={false}\r\n              isHideButtons\r\n              isHideContextMenu\r\n              isDateNextToName={false}\r\n              isMessage\r\n              isDisplayTimeIcon\r\n              isActivity\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Fragment, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nconst WorkflowPage = () => {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Typography align=\"center\">WorkflowPage still on development...</Typography>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default WorkflowPage;","import {\r\n    LOAD_STATISTICS_DATA,\r\n    SET_STATISTICS_DATA,\r\n} from '../constants/dashboard.constants';\r\n\r\nexport const loadStatisticsDataAction = () => ({ type: LOAD_STATISTICS_DATA });\r\nexport const setStatisticsDataAction = (actionData) => ({ type: SET_STATISTICS_DATA, ...actionData });","export const fetchStatisticsData = async () => {\r\n    try {\r\n        const res = await fetch(process.env.PUBLIC_URL + \"/data/statistics.json\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n        const json = await res.json();\r\n        return { data: json, error: null };\r\n    } catch (error) {\r\n        return { data: null, error };\r\n    }\r\n}","import React, { Fragment, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LineChartComponent from \"../components/Charts/LineChartComponent\";\r\nimport PieChartComponent from \"../components/Charts/PieChartComponent\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { mapSalesData } from \"../services/sales.service\";\r\nimport { isEmpty } from \"lodash\";\r\nimport {\r\n  LoadingComponent,\r\n  ErrorComponent,\r\n} from \"../components/ExceptionComponents/ExceptionComponents\";\r\nimport { useDashboardContext } from \"../context/dashboard.context\";\r\nimport {\r\n  loadStatisticsDataAction,\r\n  setStatisticsDataAction,\r\n} from \"../actions/statistics.actions\";\r\nimport { fetchStatisticsData } from \"../services/statistics.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nconst StatisticsPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const { dashboardState, dispatch } = useDashboardContext();\r\n  const { data, error, isLoading } = dashboardState.statisticsData;\r\n\r\n  const didMount = async () => {\r\n    await dispatch(loadStatisticsDataAction());\r\n    const actionData = await fetchStatisticsData();\r\n    await dispatch(setStatisticsDataAction(actionData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    didMount();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <LoadingComponent />;\r\n  }\r\n\r\n  if (error || isEmpty(data) && !isLoading) {\r\n    return (\r\n      <ErrorComponent message=\"Had a network error, please try again later\" />\r\n    );\r\n  }\r\n\r\n  const { series, labels } = mapSalesData(data.sales);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={5}>\r\n        <Grid item xs={12} md={5} lg={5}>\r\n          {/* PieChart */}\r\n          <Paper className={fixedHeightPaper}>\r\n            <PieChartComponent series={series} labels={labels} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={7} lg={7}>\r\n          {/* LineChart */}\r\n          <Paper className={fixedHeightPaper}>\r\n            <LineChartComponent data={data.report} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default StatisticsPage;\r\n","import React, { Fragment, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nconst CalendarPage = () => {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Typography align=\"center\">CalendarPage still on development...</Typography>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CalendarPage;","import React, { Fragment, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nconst UsersPage = () => {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Typography align=\"center\">UsersPage still on development...</Typography>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default UsersPage;","import React, { Fragment, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nconst SettingsPage = () => {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Typography align=\"center\">SettingsPage still on development...</Typography>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SettingsPage;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"../pages/HomePage\";\r\nimport WorkflowPage from \"../pages/WorkflowPage\";\r\nimport StatisticsPage from \"../pages/StatisticsPage\";\r\nimport CalendarPage from \"../pages/CalendarPage\";\r\nimport UsersPage from \"../pages/UsersPage\";\r\nimport SettingsPage from \"../pages/SettingsPage\";\r\n\r\n\r\nconst DashboardRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/workflow\" component={WorkflowPage} />\r\n            <Route path=\"/statistics\" component={StatisticsPage} />\r\n            <Route path=\"/calendar\" component={CalendarPage} />\r\n            <Route path=\"/users\" component={UsersPage} />\r\n            <Route path=\"/settings\" component={SettingsPage} />\r\n            <Route exact path=\"/\" component={HomePage} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default DashboardRoutes;","import React, { useState, Fragment } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuListItems from \"../MenuListItems/MenuListItems\";\r\nimport { Button, Container, Typography } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DashboardRoutes from \"../../routes/DashboardRoutes\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n    margin: 5,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  menuHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginLeft: -45,\r\n    marginTop: 4,\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"transparent\",\r\n    color: \"black\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  avatar: {\r\n    display: \"inline-flex\",\r\n    \"& > *\": {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n  button: {\r\n    borderRadius: 25,\r\n    marginRight: 15,\r\n    textTransform: \"unset !important\",\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    backgroundColor: \"#0e1a35\",\r\n    color: \"white\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const [open, toggleOpen] = useState(true);\r\n\r\n  const toggleDrawerOpen = () => {\r\n    toggleOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      {/* AppBar */}\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <div className={classes.navigationButtons}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color={open ? \"inherit\" : \"primary\"}\r\n              aria-label=\"open drawer\"\r\n              onClick={toggleDrawerOpen}\r\n            >\r\n              <MenuOpenIcon />\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <div className={classes.actionsButtons}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"primary\"\r\n            >\r\n              Add project\r\n            </Button>\r\n            <IconButton color=\"inherit\">\r\n              <EmailIcon />\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={3} color=\"primary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <div className={classes.avatar}>\r\n              <Avatar alt=\"John\" src=\"/static/images/avatar/3.jpg\" />\r\n              <IconButton color=\"inherit\" className=\"user-avatar-arrow\">\r\n                <ArrowDropDownIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Drawer */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.menuHeader}>\r\n          {open && (\r\n            <Fragment>\r\n              <img src={process.env.PUBLIC_URL + \"/images/app-logo.PNG\"} />\r\n              <Typography variant=\"h6\" component=\"h1\">\r\n                Merkury\r\n              </Typography>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n        <MenuListItems />\r\n      </Drawer>\r\n\r\n      {/* Content */}\r\n      <div className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <DashboardRoutes />\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { DashboardContextProvider } from \"./context/dashboard.context\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#5584ff\",\n        },\n        secondary: {\n            main: \"#f83c7b\",\n        },\n    },\n});\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <MuiThemeProvider theme={theme} >\n                <DashboardContextProvider>\n                    <Dashboard />\n                </DashboardContextProvider>\n            </MuiThemeProvider>\n        </Router>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}