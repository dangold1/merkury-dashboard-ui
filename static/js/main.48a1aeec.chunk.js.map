{"version":3,"sources":["components/MenuListItems/MenuListItems.jsx","components/ChartHeader/ChartHeader.jsx","components/Charts/LineChartComponent/LineChartComponent.jsx","hooks/useCheckMobileScreen.js","components/Charts/PieChartComponent/PieChartComponent.jsx","components/NotesList/NotesList.jsx","services/date.service.js","services/sales.service.js","components/ExceptionComponents/ExceptionComponents.jsx","constants/dashboard.constants.js","context/dashboard.context.js","actions/home.actions.js","services/home.service.js","pages/HomePage/HomePage.jsx","pages/WorkflowPage.jsx","actions/statistics.actions.js","services/statistics.service.js","pages/StatisticsPage/StatisticsPage.jsx","pages/CalendarPage.jsx","pages/UsersPage.jsx","pages/SettingsPage.jsx","routes/DashboardRoutes.jsx","components/Dashboard/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["MenuListItems","isOpen","history","useHistory","useState","location","pathname","currentPath","setCurrentPath","listen","className","clsx","to","button","color","ChartHeader","type","IconButton","LineChartComponent","props","ResponsiveContainer","width","height","LineChart","data","YAxis","stroke","Label","angle","position","style","textAnchor","fill","Line","dataKey","dot","Tooltip","defaultProps","useCheckMobileScreen","window","innerWidth","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","PieChartComponent","isMobileMode","chart","colors","labels","dataLabels","enabled","plotOptions","pie","donut","size","background","show","total","showAlways","label","formatter","w","globals","seriesTotals","reduce","a","b","responsive","breakpoint","options","legend","id","series","TYPE_MESSAGES","NotesList","isMessage","isDisplayTimeIcon","isDelay","isHideContextMenu","isHideButtons","isActivity","notifactions","setNotifactions","setNoteNotifactions","toLowerCase","Error","aria-labelledby","Badge","badgeContent","length","map","item","index","user","title","content","author","date","action","task","username","name","userImage","image","dateText","moment","fromNow","getTimeTextByDate","isTimePassed","now","isAfter","getIsTimePassed","Avatar","alt","src","fontSize","fontWeight","marginLeft","mapSalesData","push","value","useStyles","makeStyles","theme","error","marginTop","spacing","LoadingComponent","CircularProgress","ErrorComponent","message","classes","Alert","severity","elevation","variant","AlertTitle","LOAD_HOME_DATA","LOAD_STATISTICS_DATA","SET_HOME_DATA","SET_STATISTICS_DATA","DashboardContext","createContext","initialState","homeData","isLoading","statisticsData","dashboardReducer","state","useDashboardContext","context","useContext","DashboardContextProvider","useReducer","dashboardState","dispatch","Provider","setHomeDataAction","actionData","fetchHomeData","fetch","process","headers","res","json","HomePage","didMount","isEmpty","sales","tasks","messages","activity","report","isDateNextToName","WorkflowPage","Typography","align","setStatisticsDataAction","fetchStatisticsData","StatisticsPage","CalendarPage","UsersPage","SettingsPage","DashboardRoutes","path","component","exact","Dashboard","open","toggleOpen","toggleDrawerOpen","renderDrawerButton","edge","aria-label","onClick","createMuiTheme","palette","primary","main","secondary","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48a1aeec.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport TrendingUpOutlinedIcon from \"@material-ui/icons/TrendingUpOutlined\";\r\nimport ViewAgendaOutlinedIcon from \"@material-ui/icons/ViewAgendaOutlined\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport DateRangeOutlinedIcon from \"@material-ui/icons/DateRangeOutlined\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MenuListItems.css\";\r\n\r\nconst MenuListItems = ({ isOpen }) => {\r\n  const history = useHistory();\r\n  const [currentPath, setCurrentPath] = useState(history.location.pathname);\r\n  history.listen((location) => setCurrentPath(location.pathname));\r\n\r\n  return (\r\n    <div className=\"menu-list\">\r\n      <Link className={clsx(\"link\", currentPath === \"/\" && \"selected\")} to=\"/\">\r\n        <li button className=\"item\">\r\n          <HomeOutlinedIcon className=\"icon-margin\" color=\"primary\" />\r\n          {isOpen ? \"Home\" : \"\"}\r\n        </li>\r\n      </Link>\r\n      <hr className=\"items-hr\" />\r\n\r\n      <Link\r\n        className={clsx(\"link\", currentPath === \"/workflow\" && \"selected\")}\r\n        to=\"/workflow\"\r\n      >\r\n        <li button className=\"item\">\r\n          <ViewAgendaOutlinedIcon className=\"icon-margin\" color=\"primary\" />\r\n          {isOpen ? \"Workflow\" : \"\"}\r\n        </li>\r\n      </Link>\r\n      <hr className=\"items-hr\" />\r\n\r\n      <Link\r\n        className={clsx(\"link\", currentPath === \"/statistics\" && \"selected\")}\r\n        to=\"/statistics\"\r\n      >\r\n        <li button className=\"item\">\r\n          <TrendingUpOutlinedIcon className=\"icon-margin\" color=\"primary\" />\r\n          {isOpen ? \"Statistics\" : \"\"}\r\n        </li>\r\n      </Link>\r\n      <hr className=\"items-hr\" />\r\n\r\n      <Link\r\n        className={clsx(\"link\", currentPath === \"/calendar\" && \"selected\")}\r\n        to=\"/calendar\"\r\n      >\r\n        <li button className=\"item\">\r\n          <DateRangeOutlinedIcon className=\"icon-margin\" color=\"primary\" />\r\n          {isOpen ? \"Calendar\" : \"\"}\r\n        </li>\r\n      </Link>\r\n      <hr className=\"items-hr\" />\r\n\r\n      <Link\r\n        className={clsx(\"link\", currentPath === \"/users\" && \"selected\")}\r\n        to=\"/users\"\r\n      >\r\n        <li button className=\"item\">\r\n          <PersonOutlineOutlinedIcon className=\"icon-margin\" color=\"primary\" />\r\n          {isOpen ? \"Users\" : \"\"}\r\n        </li>\r\n      </Link>\r\n      <hr className=\"items-hr\" />\r\n\r\n      <Link\r\n        className={clsx(\"link\", currentPath === \"/settings\" && \"selected\")}\r\n        to=\"/settings\"\r\n      >\r\n        <li button className=\"item\">\r\n          <SettingsOutlinedIcon className=\"icon-margin\" color=\"primary\" />\r\n          {isOpen ? \"Settings\" : \"\"}\r\n        </li>\r\n      </Link>\r\n      <hr className=\"items-hr\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuListItems;\r\n","import React from \"react\";\r\nimport \"./ChartHeader.css\";\r\n\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nconst ChartHeader = ({ type }) => {\r\n  return (\r\n    <div className=\"chart-header\">\r\n      <div className=\"text-header\">{type}</div>\r\n      <button className=\"btn\">\r\n        <span className=\"btn-text\">Period: </span>\r\n        <span className=\"period-text\">Last Year</span>\r\n        <IconButton>\r\n          <ArrowDropDownIcon />\r\n        </IconButton>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartHeader;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  YAxis,\r\n  Label,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n} from \"recharts\";\r\nimport ChartHeader from \"../../ChartHeader/ChartHeader\";\r\nimport \"./LineChartComponent.css\";\r\n\r\nconst LineChartComponent = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <ChartHeader type=\"Report\" />\r\n      <ResponsiveContainer width=\"100%\" height={200}>\r\n        <LineChart\r\n          data={props.data}\r\n          width={300}\r\n          height={300}\r\n        >\r\n          <YAxis stroke=\"#8492af\">\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{\r\n                textAnchor: \"middle\",\r\n                fill: \"#5584ff\",\r\n              }}\r\n            ></Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#5584ff\" dot={false} />\r\n          <Tooltip />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLineChartComponent.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default LineChartComponent;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useCheckMobileScreen = () => {\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const handleWindowSizeChange = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n\r\n    return (width <= 768);\r\n}\r\n\r\nexport default useCheckMobileScreen;","import React, { useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport ChartHeader from \"../../ChartHeader/ChartHeader\";\r\nimport useCheckMobileScreen from \"../../../hooks/useCheckMobileScreen\";\r\n\r\nconst getOptions = (labels) => ({\r\n  chart: { type: \"donut\" },\r\n  colors: [\"#25396e\", \"#5584ff\", \"#4b74e0\", \"#4164c2\", \"#3755a4\"],\r\n  labels,\r\n  dataLabels: { enabled: false },\r\n  stroke: { width: 0 },\r\n  plotOptions: {\r\n    pie: {\r\n      donut: {\r\n        size: \"50%\",\r\n        background: \"transparent\",\r\n        labels: {\r\n          show: true,\r\n          total: {\r\n            show: true,\r\n            showAlways: true,\r\n            label: \"Sales\",\r\n            formatter: (w) => {\r\n              return w.globals.seriesTotals.reduce((a, b) => {\r\n                return a + b;\r\n              }, 0);\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  responsive: [\r\n    {\r\n      breakpoint: 480,\r\n      options: {\r\n        legend: {\r\n          position: \"bottom\",\r\n        },\r\n      },\r\n    },\r\n  ],\r\n});\r\n\r\nconst PieChartComponent = (props) => {\r\n  const isMobileMode = useCheckMobileScreen();\r\n  const [options] = useState(getOptions(props.labels));\r\n  return (\r\n    <div id=\"chart\">\r\n      <ChartHeader type=\"Your Sales\" />\r\n      <Chart\r\n        options={options}\r\n        series={props.series}\r\n        type=\"donut\"\r\n        width={isMobileMode ? 200 : 325}\r\n        height={isMobileMode ? 250 : 180}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPieChartComponent.defaultProps = {\r\n  series: [],\r\n  labels: [],\r\n};\r\n\r\nexport default PieChartComponent;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport {\r\n  getTimeTextByDate,\r\n  getIsTimePassed,\r\n} from \"../../services/date.service\";\r\nimport { Badge, IconButton } from \"@material-ui/core\";\r\n\r\nimport \"./NotesList.css\";\r\n\r\nconst TYPE_TASK = \"tasks\";\r\nconst TYPE_MESSAGES = \"messages\";\r\nconst TYPE_ACTIVITY = \"activity\";\r\n\r\nconst NotesList = (props) => {\r\n  const {\r\n    data,\r\n    isMessage,\r\n    isDisplayTimeIcon,\r\n    isDelay,\r\n    isHideContextMenu,\r\n    isHideButtons,\r\n    isActivity,\r\n    type,\r\n  } = props;\r\n\r\n  const [notifactions, setNotifactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setNoteNotifactions();\r\n  }, [type]);\r\n\r\n  const setNoteNotifactions = () => {\r\n    switch (type.toLowerCase()) {\r\n      case TYPE_TASK:\r\n        setNotifactions([5, 2]);\r\n        break;\r\n      case TYPE_MESSAGES:\r\n        setNotifactions([2]);\r\n        break;\r\n      case TYPE_ACTIVITY:\r\n        setNotifactions([10]);\r\n        break;\r\n      default:\r\n        throw new Error(\"Unknown Type\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul aria-labelledby=\"subheader\" className=\"notes-list\">\r\n      <div className=\"list-header\">\r\n        <p className=\"header-text\" id=\"subheader\">\r\n          {type}\r\n        </p>\r\n        <div className=\"notes-badges\">\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={notifactions[0]} color=\"primary\" />\r\n          </IconButton>\r\n          {notifactions.length > 1 && (\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={notifactions[1]} color=\"secondary\"/>\r\n            </IconButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"note-content-wrapper\">\r\n        {data.map((item, index) => {\r\n          const { user, title, content, author, date, action, task } = item;\r\n          const username = user?.name ?? \"No user Found\";\r\n          const userImage = user?.image || \"/static/images/avatar/1.jpg\";\r\n          const dateText = getTimeTextByDate(date);\r\n          const isTimePassed = getIsTimePassed(date);\r\n\r\n          return (\r\n            <Fragment key={index}>\r\n              <li\r\n                key={index}\r\n                className={\r\n                  type.toLowerCase() === TYPE_MESSAGES && index < 2 && \"unread\"\r\n                }\r\n              >\r\n                <div className=\"note-text-content-box\">\r\n                  <div className=\"title-list-item-text\">\r\n                    <Avatar className=\"avatar\" alt={username} src={userImage} />\r\n\r\n                    {isActivity ? (\r\n                      <span className=\"text-center\">\r\n                        {`${author} `}\r\n                        <span\r\n                          style={{\r\n                            color: \"#8492af\",\r\n                            fontSize: 11,\r\n                            fontWeight: \"normal\",\r\n                          }}\r\n                        >\r\n                          {action}\r\n                        </span>\r\n                        {` ${task}`}\r\n                        {\r\n                          <span\r\n                            className={clsx(\r\n                              \"display-date\",\r\n                              isDelay && !isTimePassed && \"time-delayed\"\r\n                            )}\r\n                          >\r\n                            {isDisplayTimeIcon && (\r\n                              <AccessTimeIcon className=\"time-icon\" />\r\n                            )}\r\n                            <span>{dateText}</span>\r\n                          </span>\r\n                        }\r\n                      </span>\r\n                    ) : isMessage ? (\r\n                      <div className=\"message\">\r\n                        {author}\r\n                        <span\r\n                          className={clsx(\r\n                            isDelay && !isTimePassed && \"time-delayed\"\r\n                          )}\r\n                          style={{\r\n                            marginLeft: 8,\r\n                            color: \"#96a2ba\",\r\n                            fontSize: 12,\r\n                            fontWeight: \"normal\",\r\n                          }}\r\n                        >\r\n                          {dateText}\r\n                        </span>\r\n                        <p className=\"p-center\">\r\n                          {content}\r\n                          {!isHideButtons && (\r\n                            <div className=\"actions-btn\">\r\n                              <ReplyIcon className=\"action-btn\" />\r\n                              <SettingsIcon className=\"action-btn\" />\r\n                            </div>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                    ) : (\r\n                      <span className=\"task-content\">\r\n                        {title}\r\n                        {\r\n                          <span\r\n                            className={clsx(\r\n                              \"display-date\",\r\n                              isDelay && !isTimePassed && \"time-delayed\"\r\n                            )}\r\n                          >\r\n                            {isDisplayTimeIcon && (\r\n                              <AccessTimeIcon className=\"time-icon\" />\r\n                            )}\r\n                            <span>{dateText}</span>\r\n                          </span>\r\n                        }\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  {!isMessage && <p className=\"text-content\">{content}</p>}\r\n                  {!isHideContextMenu && (\r\n                    <MoreVertIcon className=\"context-menu\" />\r\n                  )}\r\n                </div>\r\n              </li>\r\n              {index !== data.length - 1 && <hr />}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n    </ul>\r\n  );\r\n};\r\n\r\nNotesList.defaultProps = {\r\n  data: [],\r\n  isDelay: false,\r\n  isHideButtons: true,\r\n  isHideContextMenu: false,\r\n  isMessage: false,\r\n  isDisplayTimeIcon: false,\r\n  isActivity: false,\r\n};\r\n\r\nexport default NotesList;\r\n","import moment from 'moment';\r\n\r\nexport const getTimeTextByDate = date => {\r\n    const d = moment(date);\r\n    const fromNow = d.fromNow();\r\n    return fromNow;\r\n}\r\n\r\nexport const getIsTimePassed = date => {\r\n    const now = moment();\r\n    const d = moment(date);\r\n    return d.isAfter(now);\r\n}","export const mapSalesData = (data) => {\r\n    const series = [];\r\n    const labels = [];\r\n    for (const item of data) {\r\n        series.push(item.value);\r\n        labels.push(item.label);\r\n    }\r\n    return { series, labels }\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport const LoadingComponent = () => <CircularProgress />;\r\n\r\nexport const ErrorComponent = ({ message }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.error}>\r\n      <Alert severity=\"error\" elevation={6} variant=\"filled\">\r\n        <AlertTitle>Error</AlertTitle>\r\n        {message ? (\r\n          <strong>{message}</strong>\r\n        ) : (\r\n          <strong>check which error</strong>\r\n        )}\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n","export const LOAD_HOME_DATA = \"LOAD_HOME_DATA\";\r\nexport const LOAD_STATISTICS_DATA = \"LOAD_STATISTICS_DATA\";\r\n\r\nexport const SET_HOME_DATA = \"SET_HOME_DATA\";\r\nexport const SET_STATISTICS_DATA = \"SET_STATISTICS_DATA\";\r\n\r\n","// src/count/count-context.js\r\nimport React, { createContext, useContext, useReducer } from 'react';\r\n\r\nimport {\r\n    LOAD_HOME_DATA,\r\n    LOAD_STATISTICS_DATA,\r\n    SET_HOME_DATA,\r\n    SET_STATISTICS_DATA\r\n} from '../constants/dashboard.constants';\r\n\r\nconst DashboardContext = createContext();\r\n\r\nconst initialState = {\r\n    homeData: {\r\n        isLoading: false,\r\n        error: null,\r\n        data: {}\r\n    },\r\n    statisticsData: {\r\n        isLoading: false,\r\n        error: null,\r\n        data: {}\r\n    }\r\n}\r\n\r\n\r\nconst dashboardReducer = (state, action) => {\r\n    const { type, data, error } = action;\r\n    switch (type) {\r\n        case LOAD_HOME_DATA:\r\n            return { ...state, homeData: { ...state.homeData, isLoading: true } };\r\n\r\n        case SET_HOME_DATA:\r\n            return { ...state, homeData: { ...state.homeData, isLoading: false, error, data } };\r\n\r\n        case LOAD_STATISTICS_DATA:\r\n            return { ...state, statisticsData: { ...state.statisticsData, isLoading: true } };\r\n\r\n        case SET_STATISTICS_DATA:\r\n            return { ...state, statisticsData: { ...state.statisticsData, isLoading: false, error, data } };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst useDashboardContext = () => {\r\n    const context = useContext(DashboardContext);\r\n    if (!context) {\r\n        throw new Error(`useDashboardContext must be used within a DashboardContextProvider`);\r\n    }\r\n    return context;\r\n}\r\n\r\nconst DashboardContextProvider = (props) => {\r\n    const [dashboardState, dispatch] = useReducer(dashboardReducer, initialState)\r\n    return <DashboardContext.Provider value={{ dashboardState, dispatch }} {...props} />\r\n}\r\n\r\nexport { DashboardContextProvider, useDashboardContext };   ","import {\r\n    LOAD_HOME_DATA,\r\n    SET_HOME_DATA,\r\n} from '../constants/dashboard.constants';\r\n\r\nexport const loadHomeDataAction = () => ({ type: LOAD_HOME_DATA });\r\nexport const setHomeDataAction = (actionData) => ({ type: SET_HOME_DATA, ...actionData });","export const fetchHomeData = async () => {\r\n    try {\r\n        const res = await fetch(process.env.PUBLIC_URL + \"/data/home.json\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n        const json = await res.json();\r\n        return { data: json, error: null };\r\n    } catch (error) {\r\n        return { data: null, error };\r\n    }\r\n}","import React, { Fragment, useEffect } from \"react\";\r\nimport LineChartComponent from \"../../components/Charts/LineChartComponent/LineChartComponent\";\r\nimport PieChartComponent from \"../../components/Charts/PieChartComponent/PieChartComponent\";\r\nimport NotesList from \"../../components/NotesList/NotesList\";\r\nimport { mapSalesData } from \"../../services/sales.service\";\r\nimport { isEmpty } from \"lodash\";\r\nimport {\r\n  LoadingComponent,\r\n  ErrorComponent,\r\n} from \"../../components/ExceptionComponents/ExceptionComponents\";\r\nimport { useDashboardContext } from \"../../context/dashboard.context\";\r\nimport {\r\n  loadHomeDataAction,\r\n  setHomeDataAction,\r\n} from \"../../actions/home.actions\";\r\nimport { fetchHomeData } from \"../../services/home.service\";\r\nimport \"./HomePage.css\";\r\n\r\nconst HomePage = () => {\r\n  const { dashboardState, dispatch } = useDashboardContext();\r\n  const { data, error, isLoading } = dashboardState.homeData;\r\n\r\n  const didMount = async () => {\r\n    await dispatch(loadHomeDataAction());\r\n    const actionData = await fetchHomeData();\r\n    await dispatch(setHomeDataAction(actionData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    didMount();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <LoadingComponent />;\r\n  }\r\n\r\n  if ((error || isEmpty(data)) && !isLoading) {\r\n    return (\r\n      <ErrorComponent message=\"Had a network error, please try again later\" />\r\n    );\r\n  }\r\n\r\n  const { sales, tasks, messages, activity } = data;\r\n  const { series, labels } = mapSalesData(sales);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"home-header\">\r\n        <div className=\"hello-text\">Hello John</div>\r\n      </div>\r\n      <div className=\"charts-flex-container\">\r\n        {/* PieChart */}\r\n        <div className=\"chart-wrapper\">\r\n          <PieChartComponent series={series} labels={labels} />\r\n        </div>\r\n        {/* LineChart */}\r\n        <div className=\"chart-wrapper\">\r\n          <LineChartComponent data={data.report} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Notes Lists */}\r\n      <div className=\"notes-grid\">\r\n        <div className=\"note-col\">\r\n          <NotesList\r\n            type=\"Tasks\"\r\n            data={tasks}\r\n            isDelay\r\n            isHideButtons\r\n            isHideContextMenu={false}\r\n            isMessage={false}\r\n            isDisplayTimeIcon\r\n            isActivity={false}\r\n          />\r\n        </div>\r\n        <div className=\"note-col\">\r\n          <NotesList\r\n            type=\"Messages\"\r\n            data={messages}\r\n            isDelay={false}\r\n            isHideButtons={false}\r\n            isHideContextMenu\r\n            isDateNextToName\r\n            isMessage\r\n            isDisplayTimeIcon={false}\r\n            isActivity={false}\r\n          />\r\n        </div>\r\n        <div className=\"note-col\">\r\n          <NotesList\r\n            type=\"Activity\"\r\n            data={activity}\r\n            isDelay={false}\r\n            isHideButtons\r\n            isHideContextMenu\r\n            isMessage\r\n            isDisplayTimeIcon\r\n            isActivity\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Fragment } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst WorkflowPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Typography align=\"center\">\r\n        WorkflowPage still on development...\r\n      </Typography>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default WorkflowPage;\r\n","import {\r\n    LOAD_STATISTICS_DATA,\r\n    SET_STATISTICS_DATA,\r\n} from '../constants/dashboard.constants';\r\n\r\nexport const loadStatisticsDataAction = () => ({ type: LOAD_STATISTICS_DATA });\r\nexport const setStatisticsDataAction = (actionData) => ({ type: SET_STATISTICS_DATA, ...actionData });","export const fetchStatisticsData = async () => {\r\n    try {\r\n        const res = await fetch(process.env.PUBLIC_URL + \"/data/statistics.json\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n        const json = await res.json();\r\n        return { data: json, error: null };\r\n    } catch (error) {\r\n        return { data: null, error };\r\n    }\r\n}","import React, { Fragment, useEffect } from \"react\";\r\nimport LineChartComponent from \"../../components/Charts/LineChartComponent/LineChartComponent\";\r\nimport PieChartComponent from \"../../components/Charts/PieChartComponent/PieChartComponent\";\r\nimport { mapSalesData } from \"../../services/sales.service\";\r\nimport { isEmpty } from \"lodash\";\r\nimport {\r\n  LoadingComponent,\r\n  ErrorComponent,\r\n} from \"../../components/ExceptionComponents/ExceptionComponents\";\r\nimport { useDashboardContext } from \"../../context/dashboard.context\";\r\nimport {\r\n  loadStatisticsDataAction,\r\n  setStatisticsDataAction,\r\n} from \"../../actions/statistics.actions\";\r\nimport { fetchStatisticsData } from \"../../services/statistics.service\";\r\nimport \"./StatisticsPage.css\";\r\n\r\nconst StatisticsPage = () => {\r\n\r\n  const { dashboardState, dispatch } = useDashboardContext();\r\n  const { data, error, isLoading } = dashboardState.statisticsData;\r\n\r\n  const didMount = async () => {\r\n    await dispatch(loadStatisticsDataAction());\r\n    const actionData = await fetchStatisticsData();\r\n    await dispatch(setStatisticsDataAction(actionData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    didMount();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <LoadingComponent />;\r\n  }\r\n\r\n  if (error || isEmpty(data) && !isLoading) {\r\n    return (\r\n      <ErrorComponent message=\"Had a network error, please try again later\" />\r\n    );\r\n  }\r\n\r\n  const { series, labels } = mapSalesData(data.sales);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"charts-flex-container\">\r\n        {/* PieChart */}\r\n        <div className=\"chart-wrapper\">\r\n          <PieChartComponent series={series} labels={labels} />\r\n        </div>\r\n        {/* LineChart */}\r\n        <div className=\"chart-wrapper\">\r\n          <LineChartComponent data={data.report} />\r\n        </div>\r\n      </div>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default StatisticsPage;\r\n","import React, { Fragment } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst CalendarPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Typography align=\"center\">\r\n        CalendarPage still on development...\r\n      </Typography>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;\r\n","import React, { Fragment } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst UsersPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Typography align=\"center\">UsersPage still on development...</Typography>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","import React, { Fragment } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst SettingsPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Typography align=\"center\">\r\n        SettingsPage still on development...\r\n      </Typography>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"../pages/HomePage/HomePage\";\r\nimport WorkflowPage from \"../pages/WorkflowPage\";\r\nimport StatisticsPage from \"../pages/StatisticsPage/StatisticsPage\";\r\nimport CalendarPage from \"../pages/CalendarPage\";\r\nimport UsersPage from \"../pages/UsersPage\";\r\nimport SettingsPage from \"../pages/SettingsPage\";\r\n\r\n\r\nconst DashboardRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/workflow\" component={WorkflowPage} />\r\n            <Route path=\"/statistics\" component={StatisticsPage} />\r\n            <Route path=\"/calendar\" component={CalendarPage} />\r\n            <Route path=\"/users\" component={UsersPage} />\r\n            <Route path=\"/settings\" component={SettingsPage} />\r\n            <Route exact path=\"/\" component={HomePage} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default DashboardRoutes;","import React, { useState, Fragment } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuListItems from \"../MenuListItems/MenuListItems\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DashboardRoutes from \"../../routes/DashboardRoutes\";\r\nimport useCheckMobileScreen from \"../../hooks/useCheckMobileScreen\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const isMobileMode = useCheckMobileScreen();\r\n  const [open, toggleOpen] = useState(true);\r\n\r\n  const toggleDrawerOpen = () => {\r\n    toggleOpen(!open);\r\n  };\r\n\r\n  const renderLogo = () => (\r\n    <Fragment>\r\n      <img src={process.env.PUBLIC_URL + \"/images/app-logo.PNG\"} />\r\n      <h3>Merkury</h3>\r\n    </Fragment>\r\n  );\r\n\r\n  const renderDrawerButton = () => (\r\n    <IconButton\r\n      edge=\"start\"\r\n      color={open ? \"inherit\" : \"primary\"}\r\n      aria-label=\"open drawer\"\r\n      onClick={toggleDrawerOpen}\r\n      className={open ? \"menu-opened-btn\" : \"menu-closed-btn\"}\r\n    >\r\n      <MenuOpenIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const renderAvatar = () => (\r\n    <div className=\"avatar\">\r\n      <Avatar alt=\"John\" src=\"/static/images/avatar/3.jpg\" />\r\n      <IconButton color=\"inherit\" className=\"user-avatar-arrow\">\r\n        <ArrowDropDownIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Side Bar */}\r\n      <div className={clsx(\"drawerpaper\", !open && \"drawerpaper-close\")}>\r\n        <div className=\"menu-header\">\r\n          {open ? renderLogo() : renderDrawerButton()}\r\n        </div>\r\n        <MenuListItems isOpen={open} />\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"content-container\">\r\n        {/* AppBar */}\r\n        <div className=\"appBar\">\r\n          <div className=\"toolbar\">\r\n            <div className=\"navigation-buttons\">\r\n              {open && renderDrawerButton()}\r\n              <IconButton color=\"inherit\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </div>\r\n\r\n            <div className=\"actions-buttons\">\r\n              <button id=\"add-project-btn\">\r\n                <IconButton color=\"inherit\">\r\n                  <AddIcon />\r\n                </IconButton>\r\n                Add project\r\n              </button>\r\n              <IconButton color=\"inherit\">\r\n                <EmailIcon />\r\n              </IconButton>\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={3} color=\"primary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              {!isMobileMode && renderAvatar()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <DashboardRoutes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport { DashboardContextProvider } from \"./context/dashboard.context\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#5584ff\",\n        },\n        secondary: {\n            main: \"#f83c7b\",\n        },\n    },\n});\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <MuiThemeProvider theme={theme} >\n                <DashboardContextProvider>\n                    <Dashboard />\n                </DashboardContextProvider>\n            </MuiThemeProvider>\n\n        </Router>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}